(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{340:function(t,e,s){"use strict";s.r(e);var a=s(28),c=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"crc-card-class-responsibility-collaboration-card"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#crc-card-class-responsibility-collaboration-card"}},[t._v("#")]),t._v(" CRC Card(Class-Responsibility-Collaboration Card)")]),t._v(" "),s("p",[t._v("OOP 설계에서 사용되는 브레인스토밍툴입니다. 객체-책임-공통작업자의 약자로 일반적인 디자인을 시작할 때\n어떤 객체가 필요하고 그들이 어떻게 상호연계할지 여부를 결정하는 데 사용합니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/17817719/38777220-5f98e162-40df-11e8-82fc-6c48d00f6127.png",alt:"crc card"}})]),t._v(" "),s("h4",{attrs:{id:"omt-object-modeling-technique"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#omt-object-modeling-technique"}},[t._v("#")]),t._v(" OMT(Object Modeling Technique)")]),t._v(" "),s("p",[t._v("객체 또는 클래스, 객체의 속성, 메소드 및 관계를 설명합니다.\n다른 종류의 구성 요소를 위해 클래스를 나타내는 상자를 사용합니다.\n구성 요소를 연결하는 선별로 구성 요소 간의 연관, 집계 및 상속 관계를 나타냅니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/17817719/38777273-34b09796-40e0-11e8-862d-0df7e88fd730.png",alt:"omt"}})]),t._v(" "),s("h4",{attrs:{id:"omsc-object-modeling-sequence-charts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#omsc-object-modeling-sequence-charts"}},[t._v("#")]),t._v(" OMSC(Object Modeling Sequence Charts)")]),t._v(" "),s("p",[t._v("메시지 시퀀스 차트는 프로세스나 하드웨어 요소와 같이 동시에 운영되는 개체 사이에서\n프로토콜을 설계하고 지정하기 위한 표준 표기법입니다. 도메인의 개체들 사이의 신호 흐름을\n보여주는 시나리오를 지정합니다.")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://user-images.githubusercontent.com/17817719/38777290-84424e12-40e0-11e8-9501-913bb8b19ab1.png",alt:"omsc"}})])])}),[],!1,null,null,null);e.default=c.exports}}]);